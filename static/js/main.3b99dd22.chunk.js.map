{"version":3,"sources":["api.ts","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","theme.ts","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","Chart","_ref","coinId","isLoading","data","useQuery","fetchCoinHistory","refetchInterval","_jsx","_Fragment","Price","children","Title","styled","h1","props","theme","accentColor","Loader","span","Container","div","Header","header","Overview","OverviewItem","Description","p","Tabs","Tab","isActive","textColor","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","infoLoading","infoData","fetchCoinTickers","tickersLoading","tickersData","fetchCoinInfo","loading","console","log","_jsxs","Helmet","name","rank","symbol","open_source","description","total_supply","max_supply","Link","to","Switch","Route","path","CoinsList","ul","li","bgColor","Img","img","Coins","slice","map","coin","pathname","id","src","toLowerCase","Router","BrowserRouter","GlobalStyle","createGlobalStyle","App","ReactQueryDevtools","initialIsOpen","queryClient","QueryClient","ReactDOM","render","React","StrictMode","QueryClientProvider","client","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.3b99dd22.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\nconst OHLCV_URL = `https://ohlcv-api.nomadcoders.workers.dev`;\n\nexport function fetchCoins() {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n}\n\nexport function fetchCoinInfo(coinId: string) {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinTickers(coinId: string) {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\n    response.json()\n  );\n}\n\nexport function fetchCoinHistory(coinId: string) {\n  // const endDate = Math.floor(Date.now() / 1000);\n  // const startDate = endDate - 60 * 60 * 24 * 7;\n\n  return fetch(`${OHLCV_URL}?coinId=${coinId}`).then((response) =>\n    response.json()\n  );\n}\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistory } from \"../api\";\nimport ApexChart from \"apexcharts\";\n\ninterface IHistorical {\n  time_open: number;\n  time_close: number;\n  open: string;\n  high: string;\n  low: string;\n  close: string;\n  volume: string;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n}\n\nfunction Chart({ coinId }: ChartProps) {\n  const { isLoading, data } = useQuery<IHistorical[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistory(coinId),\n    {\n      refetchInterval: 10000,\n    }\n  );\n  return <></>;\n}\n\nexport default Chart;\n","function Price() {\n  return <h1>Price</h1>;\n}\n\nexport default Price;\n","import {\n  Switch,\n  Route,\n  useLocation,\n  useParams,\n  useRouteMatch,\n} from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nimport { useQuery } from \"react-query\";\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\nimport { Helmet } from \"react-helmet\";\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\n\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\ninterface PriceData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\n\nfunction Coin() {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n  const priceMatch = useRouteMatch(\"/:coinId/price\");\n  const chartMatch = useRouteMatch(\"/:coinId/chart\");\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoData>(\n    [\"info\", coinId],\n    () => fetchCoinTickers(coinId)\n  );\n  const { isLoading: tickersLoading, data: tickersData } = useQuery<PriceData>(\n    [\"tickers\", coinId],\n    () => fetchCoinInfo(coinId),\n    {\n      refetchInterval: 5000,\n    }\n  );\n\n  const loading = infoLoading || tickersLoading;\n  console.log(\"dd\", infoData);\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </title>\n      </Helmet>\n\n      <Header>\n        <Title>\n          {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\n        </Title>\n      </Header>\n      {loading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{infoData?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${infoData?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Open Source:</span>\n              <span>{infoData?.open_source ? \"Yes\" : \"No\"}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{infoData?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{tickersData?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{tickersData?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n\n          <Tabs>\n            <Tab isActive={chartMatch !== null}>\n              <Link to={`/${coinId}/chart`}>Chart</Link>\n            </Tab>\n            <Tab isActive={priceMatch !== null}>\n              <Link to={`/${coinId}/price`}>Price</Link>\n            </Tab>\n          </Tabs>\n\n          <Switch>\n            <Route path={`/:coinId/price`}>\n              <Price />\n            </Route>\n            <Route path={`/:coinId/chart`}>\n              <Chart coinId={coinId} />\n            </Route>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n}\nexport default Coin;\n","// import { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport { useQuery } from \"react-query\";\n\nconst Container = styled.div`\n  padding: 0px 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\n\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\n\nconst CoinsList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: white;\n  color: ${(props) => props.theme.bgColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    transition: color 0.2s ease-in;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Loader = styled.span`\n  text-align: center;\n  display: block;\n`;\n\nconst Img = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\n\ninterface ICoin {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  thumb?: string;\n}\n\nfunction Coins() {\n  const { isLoading, data } = useQuery<ICoin[]>(\"allcoins\", fetchCoins);\n\n  return (\n    <Container>\n      <Header>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <CoinsList>\n          {data?.slice(0, 51).map((coin) => (\n            <Coin key={coin.id}>\n              <Link\n                to={{\n                  pathname: `/${coin.id}`,\n                  state: { name: coin.name },\n                }}\n              >\n                <Img\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\n                />\n                {coin.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </CoinsList>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Coin from \"./routes/Coin\";\nimport Coins from \"./routes/Coins\";\n\nfunction Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin />\n        </Route>\n        <Route path=\"/\">\n          <Coins />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { createGlobalStyle } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color:${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor}\n}\na {\n  text-decoration:none;\n  color: inherit;\n}\n`;\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router />;\n      <ReactQueryDevtools initialIsOpen={false} />\n    </>\n  );\n}\n\nexport default App;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"#f5f6fa\",\n  accentColor: \"#4cd137\",\n};\n\nexport default theme;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}